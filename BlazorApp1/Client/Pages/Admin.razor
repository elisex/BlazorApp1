@page "/admin"
@attribute [Authorize(Roles = "Administrator")]
@using BlazorApp1.Client.Authentication
@using BlazorApp1.Shared
@using System.Net.Http.Headers
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navManager
@inject HttpClient Http

<PageTitle>Admin module</PageTitle>

<h1>ADMIN</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (userdetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Forename</th>
                <th>Surname</th>
                <th>Email</th>
                <th>Phone No</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in userdetails)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>@user.PhoneNo</td>
                    @if(!string.IsNullOrEmpty(user.Document)){
                        <a href="@user.Document" download="@user.UserName" class="buttonDownload">Download document</a>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private UserDetails[]? userdetails;

    protected override async Task OnInitializedAsync()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authenticationStateProvider;
        var token = await customAuthStateProvider.GetToken();
        if (!string.IsNullOrWhiteSpace(token))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
            userdetails = await Http.GetFromJsonAsync<UserDetails[]>("/api/UserFile");
        }
        else
            navManager.NavigateTo("/");
    }
}