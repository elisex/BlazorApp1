@page "/product/{id:int}"
@using System.Net.Http
@using System.Threading.Tasks
@using Blazored.SessionStorage
@inject HttpClient httpClient
@inject IProductService ProductService
@inject ICartService CartService
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<div class="product-container">
    <div class="image-container">
        <img class="media-img-big" src="@product.Image" alt="@product.Title" />
    </div>
        <div class="product-details">
            <h2 class="product-title">@product.Title</h2>
            <br />
            <p class="product-description">@product.Description</p>
            @if (product.Variants != null && product.Variants.Count > 1)
            {
                <div class="form-group">
                    <select class="form-control" @bind="currentEditionId">
                        @foreach (var variant in product.Variants)
                        {
                            <option value="@variant.EditionId">@variant.Edition.Name</option>
                        }
                    </select>
                </div>
            }
            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">$@GetSelectedVariant().OriginalPrice</h6>
                }
                <h4 class="product-price">
                    $@GetSelectedVariant().Price
                </h4>
            }
        <AuthorizeView>
            <Authorized>
                <button class="btn btn-primary" @onclick="Decision"><i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart</button>
            </Authorized>
            <NotAuthorized>
                <button class="btn btn-primary" @onclick="LoginNeeded"><i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart</button>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private Product product = new Product();
    private int currentEditionId = 1;
    [Parameter]
    public int Id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetProduct(Id);
        if (product.Variants.Count > 0)
        {
            currentEditionId = product.Variants[0].EditionId;
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.EditionId == currentEditionId);
        return variant;
    }

    private async Task LoginNeeded() => ToastService.ShowError("Please login before proceeding");

    private async Task Decision()
    {
        await CartService.AddToCart(GetSelectedVariant());
        int selectedVariant = GetSelectedVariant().EditionId;
        if (selectedVariant == 2)
        {
            NavigationManager.NavigateTo("/buy");
        }
        else
        {
            NavigationManager.NavigateTo("/finance");
        }
    }
}
